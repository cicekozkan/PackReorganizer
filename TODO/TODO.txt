MY PROJECT -*- mode: org -*-

* TODO Hocanin yaptigi fixleri yap [1/4]
- [ ] Bazi uye fonksiyonlar private olacak
- [X] Fonksiyon argumanlarinda pointer olmayanlarin constlugu bir anlam ifade etmiyor. Onlari duzelt
- [ ] Global variablelar static member variable olacak
- [ ] Arrayler fixed size olacak
* TODO Paketlere stop loss koy
* TODO Belirli araliklarda random paket ac
* TODO Uyarilari elimine et. Ozellikle target profitin doubledan int e cast edilmeden atanmasina bak. Orada bug olabilir
* DONE Define a new class that represents an engine: PackOrganizerEngine
* DONE Paketlerin miktarini butun paketler ayni miktar dolar olacak sekilde belirle <2016-01-13 Wed>
* DONE Pack ve PackVector siniflarinin dokumantasyonunu tamamla. 08/11/2015
* DONE Pack vectorun push_back uye fonksiyonu arguman olarak pack pointer almali. Vectorun push_back uye fonksiyonunun 
C++ prototipi void push_back( const T& value ); MQL de referans olmadigi icin pointer almaliyiz. 08/11/2015
* DONE Test amacli yazilan fonksiyonlari t_function() seklinde isimlendir. Daha sonra baska bir dosyaya tasi. Ilk olarak 
getRandomOrder cagrilarak yapilan 50 tane random emir acma islemini bir test fonksiyonuna tasi. 08/11/2015
[OC] Random order acan ve acik butun orderlari kapatan iki tane script yazildi. 10/11/2015
* DONE Butun hard-coded degerleri degiskenlere ata. Ornek olarak random acilan emir sayisi. 08/11/2015
* DONE Global bir pack vector degiskeni tamamla ve PackReorginize() global fonksiyonunda bu degiskeni kullan. Asagidaki 
global degiskenlere hic ihtiyac kalmamali: 08/11/2015
	int pack_index = 0;
	Pack p;
	Pack p_arr[]; 
* DONE PackVector sinifina asagidaki uye fonskiyonlari ekle. 10/11/2015
- [X] remove(int index): indexi verilen paketteki orderlari kapatacak, o paketi silecek, member variable dizileri shrink edecek, lastordertotal degiskenini update edecek
- [X] reOrginize(): yeni acilan paketi vektore ekleyecek
   + Buna gerek yok sanirim. Global reorganize fonksiyonu var.
- [X] bool checkTakeProfit(int index): paket kari kosuluna gore true false dodurecek. 11/11/2015
- [X] Paket sinifi icin toplam kari pip olarak donduren bir uye fonksiyonu yaz. 11/11/2015 
- [X] Paket sinifi icin target take profiti pip olarak donduren bir uye fonksiyon yaz. 11/11/2015 
- [X] size: Vektordeki paket sayisini donduren uye fonksiyon. 11/11/2015 
* DONE Tick fonksiyonunda yapilacaklar: 10/11/2015
- [X] Yeni bir emir acildiginde paket vektorunu reOrginize edecek
   + Degisiklik yapiyoruz: Her bir tickte butun orderlar gezilir; secilen order
comment convention ve magic number istedigimiz gibi mi degil mi kontrol edilir.
Istedigimiz gibi degilse sonraki ordera gecilir. Istedigimiz gibiyse paketlerde
var mi diye bakilir (hasOrder). Varsa bir sonraki ordera gecer; hicbir 
pakette yoksa ilk uygun pakete eklenir. 14/11/2015
- [X] Paket vektorundeki kar durumunu kontrol edip kosulu saglayan paketleri kapatacak. 10/11/2015
* DONE IsValidParity fonksiyonu yazilsin. Gelen parity valid parite dizisindeki paritelerdern
biri mi degil mi onu kontrol etsin. Bu fonksiyon isInsertible fonksiyonundan once cagrilmali 14/11/2015
* DONE Comment konvensiyonu kontrol edilmeli. Bu fonksiyon isInsertible fonksiyonundan 
once cagrilmali 14/11/2015
* DONE Magic number kontrolu de isinsertible fonksiyon cagrisindan once yapilmali 14/11/2015
* DONE Pack classindak diziler fixed size olsun. 
* DONE PackVector::push_back uye fonksiyonu member variable dizinin boyutunu kontrol edecek.
Yeterli alan yoksa ArrayResize ile reallocation yapacak.
* DONE Pack classina hasContain(ticket num) [function name hasOrder olsun] member function eklenecek
* DONE Pack::ClosePack ismini Pack::Close yap. Fonksiyon true donmuyor. Butun islemleri basarili 
ise true don. Herhangi bir emir kapatilamazsa false don. 
[OC] Close MQLde kullanilan bir array oldugu icin fonksiyonun ismi Close olamaz. 15/11/2015
* DONE Add and close member functions update these variables. 16/11/2015 
Pack classta totalprofit ve target profit member variablelar olsun.
* DONE Pack vectordeki her degisikligi logla. 
TarihZaman\tIndex\tSymbol\tOpenPrice\tOrderComment\tMagicNumber\tTicketNumber\tTotalProfit\tTargetProfit\n
0	USDCAD	
0	GBPNZD
1	X
1	Y
1	Z
TarihZaman\tIndex\tSymbol\tOpenPrice\tOrderComment\tMagicNumber\tTicketNumber\tTotalProfit\tTargetProfit\n
0	USDCAD	
0	GBPNZD
1	X
1	Y
1	Z
1	T
* DONE Class variable isimlerinde hocanin belirledigi syntaxa uyabiliriz. Simdilik karisik isimlendirmeler. Herkese OK ise variable isimleri hocanin dersteki
orneklerindeki gibi yapabiliriz. Veya herkesin OK diyecegi bir style guide. 16/11/2015
* DONE hasOrder aslinda pack vector member function olmali. order vektordeki herhangi bir packte olabilir. 18/11/2015
* DONE Debug :) 18/11/2015
  - [X] Log function fixed. 18/11/2015
  - [X] GetProfit method fixed. 18/11/2015
  - [X] checkTakeProfit method fixed. 18/11/2015
* DONE 23/11/2015 
[OC] Write a new method for PackVector class to sort the packages with their size. 22/11/2015
[OC] Assign an id to each pack to test the sort algorithm. It can be used to keep track of closed packs
* DONE 23/11/2015
[OC] Pack::ClosePack method should start the loop from the last element; not the first element. Hoping to eliminate error 4108. 22/11/2015
* DONE Fixed; tested. 26/11/2015 
[OC] Sort doesn't work. 24/11/2015
